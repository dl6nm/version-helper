name: main

on: [push]
#on:
#  push:
#    branches:
#      - main
#    tags:
#      - '[0-9]+.[0-9]+.[0-9]+*'

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [macos-latest, ubuntu-latest, windows-latest]

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@master

      - name: Setup Python
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.1.0

      - name: Install dependencies
        run: |
          poetry --version
          poetry install
          poetry show

      - name: Test with coverage
        run: |
          poetry run pytest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          name: Codecov
          files: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          verbose: true

#  linting: tbd.

  deploy:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}

    runs-on: ubuntu-latest
    timeout-minutes: 15

    needs: [build]

    steps:
      - name: Checkout Code
        uses: actions/checkout@master

      - name: Setup Python
        uses: actions/setup-python@master

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2.1.0

      - name: Install Dependencies
        run: |
          poetry --version
          poetry install
          poetry show

      - name: Build Package
        run: poetry build

      - name: Publish Package to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: poetry publish

      - name: Create GitHub Pre-release
        if: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          draft: true
          prerelease: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          draft: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
